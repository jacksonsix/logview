package filedir;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.Arrays;
import java.util.LinkedList;
import java.util.List;
import java.util.Scanner;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class SearchFileInFolder {
	//private static String base ="";
	private static Logger log = LoggerFactory.getLogger(SearchFileInFolder.class);
	
	public static void main(String[] args){	
		String file ="";
		String folder = ""; 
		 List<String> files = new LinkedList<String>();
		if(args.length <2){
			System.out.println("Usage: filename folder");
			file ="a1.jar";
			folder =".";			
		}else{
			 file =args[0];
			 folder = args[1]; 
		}
		String[] dest = findFiles(file,folder);
		
		List<String> filess = findString("xml",new File("."));
	}
	
	private static String[] findFiles(String file,String folder){
		 List<String> files = new LinkedList<String>();
		 find(file,folder,files);
	     Object[] objectList = files.toArray();
		 for(String name: files){
				System.out.println(name);
		 }
	     return Arrays.copyOf(objectList,objectList.length,String[].class);		 
	}
	

	
	public static void find(String filename,String base,List<String>files){
		  
	        File[] filesList = new File(base).listFiles();
	        if(filesList ==null) return;
	        for(File f : filesList){
	            if(f.isDirectory())	            	
	                find(filename,base+"\\"+ f.getName(),files);
	            
	            if(f.isFile()){
	                //System.out.println(f.getName()+f.length());
	            	if(filename.equalsIgnoreCase(f.getName())){
	            		files.add(base+"\\"+ f.getName());
	            	}	                
	            }
	        }
	        
	}
	
    private static  List<String> findString(String word, File curDir) {
        List<String> files = new LinkedList<String>();
        File[] filesList = curDir.listFiles();
        for(File f : filesList){
            if(f.isDirectory())            	
              findString(word,f);
            
            if(f.isFile()){              
                files.addAll(findStringInFile(word,f));
            }
        }
        //Object[] objectList = files.toArray();
        //return Arrays.copyOf(objectList,objectList.length,String[].class);
        return files;
    }
	private static List<String> findStringInFile(String word,File file){
		 List<String> lines = new LinkedList<String>();
		 //File file = new File(filename);
		 try {
		     Scanner scanner = new Scanner(file);

		     //now read the file line by line...
		     int lineNum = 0;
		     while (scanner.hasNextLine()) {
		         String line = scanner.nextLine();
		         lineNum++;
		         if(line.indexOf(word)>-1) { 
		        	 String info = file.getAbsolutePath()+": "+ lineNum +": "+ line;
		             System.out.println(info);
		             lines.add(info);
		         }
		     }
		 } catch(FileNotFoundException e) { 
		     //handle this
		 }
		 return lines;
	}

}
